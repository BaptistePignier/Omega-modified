// This file is auto-generated by Inliner. Do not edit manually.
#include "calculation_icon.h"

// Compressed 3080 pixels into 412 bytes (6.69% compression ratio)/
const uint8_t compressedPixelData[412] = {0x0019, 0x00ff, 0x0001, 0x0000, 0x004f, 0x00df, 0x00ff, 0x00be, 0x00f7, 0x0002, 0x0000, 0x0011, 0x002f, 0x004e, 0x0063, 0x0028, 0x0000, 0x0013, 0x002f, 0x00df, 0x00ff, 0x0001, 0x0000, 0x0005, 0x000e, 0x0040, 0x0000, 0x000f, 0x006e, 0x0000, 0x002f, 0x0002, 0x0002, 0x0000, 0x002e, 0x00ff, 0x00ff, 0x00d4, 0x0000, 0x000f, 0x006e, 0x0000, 0x0047, 0x000a, 0x00e4, 0x0000, 0x000e, 0x006c, 0x0000, 0x000f, 0x006e, 0x0000, 0x003d, 0x0008, 0x0070, 0x0000, 0x002f, 0x00be, 0x00f7, 0x006e, 0x0000, 0x004f, 0x002e, 0x00be, 0x00f7, 0x006c, 0x0000, 0x000f, 0x006e, 0x0000, 0x0049, 0x0000, 0x0070, 0x0000, 0x001f, 0x00df, 0x006e, 0x0000, 0x00c6, 0x000f, 0x006c, 0x0000, 0x0009, 0x004f, 0x0008, 0x0042, 0x0008, 0x0042, 0x006e, 0x0000, 0x003b, 0x002f, 0x00be, 0x00f7, 0x006e, 0x0000, 0x00ff, 0x00ff, 0x0023, 0x002f, 0x0008, 0x0042, 0x0002, 0x0000, 0x0007, 0x000e, 0x006e, 0x0000, 0x000f, 0x0036, 0x0000, 0x001d, 0x000f, 0x006e, 0x0000, 0x006b, 0x000f, 0x0070, 0x0003, 0x00ff, 0x00ff, 0x0083, 0x000e, 0x0072, 0x0006, 0x000f, 0x006e, 0x0000, 0x00ff, 0x00f4, 0x002f, 0x004e, 0x0063, 0x0002, 0x0000, 0x0059, 0x000f, 0x00a4, 0x0000, 0x0025, 0x002f, 0x00a6, 0x00fd, 0x0002, 0x0000, 0x0021, 0x000f, 0x006e, 0x0000, 0x00ff, 0x00ff, 0x0095, 0x0048, 0x00b7, 0x00b5, 0x003c, 0x00e7, 0x0010, 0x0000, 0x004f, 0x003c, 0x00e7, 0x00b7, 0x00b5, 0x006e, 0x0000, 0x0045, 0x0086, 0x00b7, 0x00b5, 0x0009, 0x0042, 0x00ec, 0x005a, 0x003c, 0x00e7, 0x006c, 0x0000, 0x006f, 0x00ec, 0x005a, 0x0009, 0x0042, 0x00b7, 0x00b5, 0x006e, 0x0000, 0x0043, 0x0000, 0x005e, 0x0000, 0x0015, 0x0008, 0x0070, 0x0000, 0x000a, 0x000e, 0x0000, 0x000f, 0x006e, 0x0000, 0x0005, 0x001f, 0x00ff, 0x0001, 0x0000, 0x0008, 0x000f, 0x004a, 0x0001, 0x000d, 0x0006, 0x0062, 0x0000, 0x000e, 0x006c, 0x0000, 0x000f, 0x006e, 0x0000, 0x003f, 0x0006, 0x0070, 0x0000, 0x000e, 0x006c, 0x0000, 0x000f, 0x0094, 0x0002, 0x0043, 0x0002, 0x0070, 0x0000, 0x000e, 0x006c, 0x0000, 0x000f, 0x006e, 0x0000, 0x00af, 0x000f, 0x004a, 0x0001, 0x0059, 0x000f, 0x0026, 0x0002, 0x0059, 0x000f, 0x0002, 0x0003, 0x005b, 0x000f, 0x00de, 0x0003, 0x004b, 0x001f, 0x009e, 0x00ba, 0x0004, 0x0058, 0x004f, 0x0086, 0x00fd, 0x007d, 0x00ef, 0x0096, 0x0005, 0x0057, 0x003f, 0x0047, 0x00ed, 0x005d, 0x006e, 0x0000, 0x0058, 0x005f, 0x006b, 0x00e5, 0x009e, 0x00f7, 0x009e, 0x006e, 0x0000, 0x0054, 0x008f, 0x0086, 0x00fd, 0x0055, 0x00e6, 0x00ff, 0x00ff, 0x003c, 0x00e7, 0x006e, 0x0000, 0x0053, 0x0020, 0x00e8, 0x00dc, 0x0036, 0x0014, 0x004f, 0x009e, 0x00f7, 0x005d, 0x00ef, 0x006e, 0x0000, 0x004f, 0x0042, 0x0006, 0x00e5, 0x0076, 0x00e6, 0x0014, 0x0003, 0x004f, 0x005d, 0x00ef, 0x005d, 0x00ef, 0x006e, 0x0000, 0x004b, 0x0046, 0x0006, 0x00e5, 0x00b0, 0x00d5, 0x0084, 0x0003, 0x005f, 0x005d, 0x00ef, 0x001c, 0x00e7, 0x009e, 0x006e, 0x0000, 0x0044, 0x006a, 0x0086, 0x00f5, 0x00a6, 0x00d4, 0x008f, 0x00d5, 0x00f4, 0x0003, 0x009f, 0x009e, 0x00f7, 0x00fb, 0x00de, 0x001c, 0x00e7, 0x007d, 0x00ef, 0x009e, 0x006e, 0x0000, 0x0038, 0x0084, 0x0086, 0x00f5, 0x0026, 0x00ed, 0x00c6, 0x00d4, 0x00a9, 0x00c4, 0x0044, 0x0001, 0x000c, 0x0072, 0x0000, 0x005f, 0x003c, 0x00e7, 0x00fb, 0x00de, 0x00db, 0x0002, 0x0000, 0x0010, 0x004f, 0x008b, 0x004a, 0x0026, 0x00c4, 0x0002, 0x0000, 0x000d, 0x0083, 0x0046, 0x00c4, 0x0089, 0x00c4, 0x002d, 0x00cd, 0x0055, 0x00e6, 0x0052, 0x0016, 0x0050, 0x00ff, 0x00ff, 0x00ff, 0x00ff, 0x00ff, 
};

constexpr Image image = Image(55, 56, compressedPixelData, 412);

const Image * ImageStore::CalculationIcon = &image;
