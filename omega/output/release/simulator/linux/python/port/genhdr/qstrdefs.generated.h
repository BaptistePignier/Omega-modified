// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR_ion, (const byte*)"\xed\x53\x03" "ion")
QDEF(MP_QSTR_keydown, (const byte*)"\x00\xc2\x07" "keydown")
QDEF(MP_QSTR_KEY_LEFT, (const byte*)"\x96\x69\x08" "KEY_LEFT")
QDEF(MP_QSTR_KEY_UP, (const byte*)"\xa8\x13\x06" "KEY_UP")
QDEF(MP_QSTR_KEY_DOWN, (const byte*)"\x3f\xc5\x08" "KEY_DOWN")
QDEF(MP_QSTR_KEY_RIGHT, (const byte*)"\xcd\xb8\x09" "KEY_RIGHT")
QDEF(MP_QSTR_KEY_OK, (const byte*)"\x69\x11\x06" "KEY_OK")
QDEF(MP_QSTR_KEY_BACK, (const byte*)"\xe6\xe5\x08" "KEY_BACK")
QDEF(MP_QSTR_KEY_HOME, (const byte*)"\x62\xb4\x08" "KEY_HOME")
QDEF(MP_QSTR_KEY_ONOFF, (const byte*)"\xa3\x7b\x09" "KEY_ONOFF")
QDEF(MP_QSTR_KEY_SHIFT, (const byte*)"\xed\xa6\x09" "KEY_SHIFT")
QDEF(MP_QSTR_KEY_ALPHA, (const byte*)"\x79\xab\x09" "KEY_ALPHA")
QDEF(MP_QSTR_KEY_XNT, (const byte*)"\x6f\x8f\x07" "KEY_XNT")
QDEF(MP_QSTR_KEY_VAR, (const byte*)"\x08\x97\x07" "KEY_VAR")
QDEF(MP_QSTR_KEY_TOOLBOX, (const byte*)"\x60\x4a\x0b" "KEY_TOOLBOX")
QDEF(MP_QSTR_KEY_BACKSPACE, (const byte*)"\x82\x5b\x0d" "KEY_BACKSPACE")
QDEF(MP_QSTR_KEY_EXP, (const byte*)"\xe0\x47\x07" "KEY_EXP")
QDEF(MP_QSTR_KEY_LN, (const byte*)"\x4f\x11\x06" "KEY_LN")
QDEF(MP_QSTR_KEY_LOG, (const byte*)"\x49\x3b\x07" "KEY_LOG")
QDEF(MP_QSTR_KEY_IMAGINARY, (const byte*)"\x22\x43\x0d" "KEY_IMAGINARY")
QDEF(MP_QSTR_KEY_COMMA, (const byte*)"\xe0\x68\x09" "KEY_COMMA")
QDEF(MP_QSTR_KEY_POWER, (const byte*)"\xf2\x8b\x09" "KEY_POWER")
QDEF(MP_QSTR_KEY_SINE, (const byte*)"\xfc\x26\x08" "KEY_SINE")
QDEF(MP_QSTR_KEY_COSINE, (const byte*)"\x50\x44\x0a" "KEY_COSINE")
QDEF(MP_QSTR_KEY_TANGENT, (const byte*)"\x2e\x79\x0b" "KEY_TANGENT")
QDEF(MP_QSTR_KEY_PI, (const byte*)"\xd4\x14\x06" "KEY_PI")
QDEF(MP_QSTR_KEY_SQRT, (const byte*)"\x69\x06\x08" "KEY_SQRT")
QDEF(MP_QSTR_KEY_SQUARE, (const byte*)"\x8c\xcd\x0a" "KEY_SQUARE")
QDEF(MP_QSTR_KEY_SEVEN, (const byte*)"\xa6\xf2\x09" "KEY_SEVEN")
QDEF(MP_QSTR_KEY_EIGHT, (const byte*)"\x9a\xb7\x09" "KEY_EIGHT")
QDEF(MP_QSTR_KEY_NINE, (const byte*)"\xc1\x72\x08" "KEY_NINE")
QDEF(MP_QSTR_KEY_LEFTPARENTHESIS, (const byte*)"\x8e\xa2\x13" "KEY_LEFTPARENTHESIS")
QDEF(MP_QSTR_KEY_RIGHTPARENTHESIS, (const byte*)"\x75\x59\x14" "KEY_RIGHTPARENTHESIS")
QDEF(MP_QSTR_KEY_FOUR, (const byte*)"\xa3\xac\x08" "KEY_FOUR")
QDEF(MP_QSTR_KEY_FIVE, (const byte*)"\xd1\x94\x08" "KEY_FIVE")
QDEF(MP_QSTR_KEY_SIX, (const byte*)"\x8f\xb3\x07" "KEY_SIX")
QDEF(MP_QSTR_KEY_MULTIPLICATION, (const byte*)"\x0f\x47\x12" "KEY_MULTIPLICATION")
QDEF(MP_QSTR_KEY_DIVISION, (const byte*)"\x44\x4c\x0c" "KEY_DIVISION")
QDEF(MP_QSTR_KEY_ONE, (const byte*)"\xa9\x3e\x07" "KEY_ONE")
QDEF(MP_QSTR_KEY_TWO, (const byte*)"\x41\x9e\x07" "KEY_TWO")
QDEF(MP_QSTR_KEY_THREE, (const byte*)"\xc3\xbb\x09" "KEY_THREE")
QDEF(MP_QSTR_KEY_PLUS, (const byte*)"\x77\x83\x08" "KEY_PLUS")
QDEF(MP_QSTR_KEY_MINUS, (const byte*)"\x21\x9c\x09" "KEY_MINUS")
QDEF(MP_QSTR_KEY_ZERO, (const byte*)"\xcf\x35\x08" "KEY_ZERO")
QDEF(MP_QSTR_KEY_DOT, (const byte*)"\x52\x5b\x07" "KEY_DOT")
QDEF(MP_QSTR_KEY_EE, (const byte*)"\xad\x11\x06" "KEY_EE")
QDEF(MP_QSTR_KEY_ANS, (const byte*)"\x31\x56\x07" "KEY_ANS")
QDEF(MP_QSTR_KEY_EXE, (const byte*)"\xf5\x47\x07" "KEY_EXE")
QDEF(MP_QSTR_kandinsky, (const byte*)"\x43\x82\x09" "kandinsky")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x06\x05" "color")
QDEF(MP_QSTR_draw_string, (const byte*)"\xaf\x41\x0b" "draw_string")
QDEF(MP_QSTR_fill_rect, (const byte*)"\x35\xed\x09" "fill_rect")
QDEF(MP_QSTR_get_pixel, (const byte*)"\xa4\x17\x09" "get_pixel")
QDEF(MP_QSTR_set_pixel, (const byte*)"\xb0\xda\x09" "set_pixel")
QDEF(MP_QSTR_wait_vblank, (const byte*)"\x0d\xb9\x0b" "wait_vblank")
QDEF(MP_QSTR_get_keys, (const byte*)"\x48\xe8\x08" "get_keys")
QDEF(MP_QSTR_left, (const byte*)"\xde\x4d\x04" "left")
QDEF(MP_QSTR_up, (const byte*)"\xa0\x6f\x02" "up")
QDEF(MP_QSTR_down, (const byte*)"\x37\x06\x04" "down")
QDEF(MP_QSTR_right, (const byte*)"\xe5\xba\x05" "right")
QDEF(MP_QSTR_OK, (const byte*)"\x61\x73\x02" "OK")
QDEF(MP_QSTR_back, (const byte*)"\xee\x44\x04" "back")
QDEF(MP_QSTR_home, (const byte*)"\x6a\x35\x04" "home")
QDEF(MP_QSTR_onOff, (const byte*)"\x6b\xff\x05" "onOff")
QDEF(MP_QSTR_shift, (const byte*)"\x85\x25\x05" "shift")
QDEF(MP_QSTR_alpha, (const byte*)"\x51\x64\x05" "alpha")
QDEF(MP_QSTR_xnt, (const byte*)"\x07\x93\x03" "xnt")
QDEF(MP_QSTR_var, (const byte*)"\xe0\x7a\x03" "var")
QDEF(MP_QSTR_toolbox, (const byte*)"\x88\x26\x07" "toolbox")
QDEF(MP_QSTR_backspace, (const byte*)"\x6a\x1f\x09" "backspace")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_ln, (const byte*)"\x87\x6e\x02" "ln")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_imaginary, (const byte*)"\xca\x80\x09" "imaginary")
QDEF(MP_QSTR_comma, (const byte*)"\xc8\xe9\x05" "comma")
QDEF(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_square, (const byte*)"\xc4\x65\x06" "square")
QDEF(MP_QSTR_7, (const byte*)"\x92\xb5\x01" "7")
QDEF(MP_QSTR_8, (const byte*)"\x9d\xb5\x01" "8")
QDEF(MP_QSTR_9, (const byte*)"\x9c\xb5\x01" "9")
QDEF(MP_QSTR__paren_open_, (const byte*)"\x8d\xb5\x01" "(")
QDEF(MP_QSTR__paren_close_, (const byte*)"\x8c\xb5\x01" ")")
QDEF(MP_QSTR_4, (const byte*)"\x91\xb5\x01" "4")
QDEF(MP_QSTR_5, (const byte*)"\x90\xb5\x01" "5")
QDEF(MP_QSTR_6, (const byte*)"\x93\xb5\x01" "6")
QDEF(MP_QSTR_1, (const byte*)"\x94\xb5\x01" "1")
QDEF(MP_QSTR_2, (const byte*)"\x97\xb5\x01" "2")
QDEF(MP_QSTR_3, (const byte*)"\x96\xb5\x01" "3")
QDEF(MP_QSTR__plus_, (const byte*)"\x8e\xb5\x01" "+")
QDEF(MP_QSTR__hyphen_, (const byte*)"\x88\xb5\x01" "-")
QDEF(MP_QSTR_0, (const byte*)"\x95\xb5\x01" "0")
QDEF(MP_QSTR__dot_, (const byte*)"\x8b\xb5\x01" ".")
QDEF(MP_QSTR_EE, (const byte*)"\xa5\x71\x02" "EE")
QDEF(MP_QSTR_Ans, (const byte*)"\x39\xb3\x03" "Ans")
QDEF(MP_QSTR_EXE, (const byte*)"\xfd\xa8\x03" "EXE")
QDEF(MP_QSTR_turtle, (const byte*)"\xcb\x55\x06" "turtle")
QDEF(MP_QSTR_forward, (const byte*)"\x1e\x40\x07" "forward")
QDEF(MP_QSTR_fd, (const byte*)"\x47\x6e\x02" "fd")
QDEF(MP_QSTR_backward, (const byte*)"\x4e\x0e\x08" "backward")
QDEF(MP_QSTR_bk, (const byte*)"\xcc\x6e\x02" "bk")
QDEF(MP_QSTR_rt, (const byte*)"\xc3\x70\x02" "rt")
QDEF(MP_QSTR_lt, (const byte*)"\x9d\x6e\x02" "lt")
QDEF(MP_QSTR_goto, (const byte*)"\xf6\xcb\x04" "goto")
QDEF(MP_QSTR_setpos, (const byte*)"\x4b\x6a\x06" "setpos")
QDEF(MP_QSTR_setposition, (const byte*)"\x3e\x11\x0b" "setposition")
QDEF(MP_QSTR_setheading, (const byte*)"\x4f\x9f\x0a" "setheading")
QDEF(MP_QSTR_seth, (const byte*)"\x6f\x74\x04" "seth")
QDEF(MP_QSTR_circle, (const byte*)"\xb7\xdd\x06" "circle")
QDEF(MP_QSTR_speed, (const byte*)"\x62\x0f\x05" "speed")
QDEF(MP_QSTR_position, (const byte*)"\x1c\x04\x08" "position")
QDEF(MP_QSTR_pos, (const byte*)"\x29\x73\x03" "pos")
QDEF(MP_QSTR_heading, (const byte*)"\x2d\x99\x07" "heading")
QDEF(MP_QSTR_pendown, (const byte*)"\x4c\x69\x07" "pendown")
QDEF(MP_QSTR_pd, (const byte*)"\x11\x70\x02" "pd")
QDEF(MP_QSTR_penup, (const byte*)"\xdb\x0b\x05" "penup")
QDEF(MP_QSTR_pu, (const byte*)"\x00\x70\x02" "pu")
QDEF(MP_QSTR_pensize, (const byte*)"\x5b\x0c\x07" "pensize")
QDEF(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF(MP_QSTR_isdown, (const byte*)"\xcd\xc5\x06" "isdown")
QDEF(MP_QSTR_pencolor, (const byte*)"\x43\x99\x08" "pencolor")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_showturtle, (const byte*)"\xc8\xbd\x0a" "showturtle")
QDEF(MP_QSTR_st, (const byte*)"\xe2\x70\x02" "st")
QDEF(MP_QSTR_hideturtle, (const byte*)"\x4b\x6c\x0a" "hideturtle")
QDEF(MP_QSTR_ht, (const byte*)"\x19\x6f\x02" "ht")
QDEF(MP_QSTR_isvisible, (const byte*)"\x31\x97\x09" "isvisible")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_monotonic, (const byte*)"\x19\xde\x09" "monotonic")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
